SELECT
    record_id,
	claim_id,
	hvid,
    created,
	model_version,
	data_set,
	data_feed,
	data_vendor,
	patient_gender,
	patient_age,
	patient_year_of_birth,
	patient_zip3,
	patient_state,
	date_service,
	date_written,
	response_code_vendor,
	diagnosis_code,
	diagnosis_code_qual,
	ndc_code,
	rx_number,
	rx_number_qual,
	bin_number,
	processor_control_number,
	fill_number,
	refill_auth_amount,
	dispensed_quantity,
	unit_of_measure,
	days_supply,
	pharmacy_npi,
	payer_name,
	payer_type,
	compound_code,
	dispensed_as_written,
	prescription_origin,
	orig_prescribed_product_service_code,
	orig_prescribed_product_service_code_qual,
	level_of_service,
	prov_prescribing_npi,
	prov_prescribing_dea_id,
	prov_prescribing_state_license,
	prov_prescribing_name_1,
	prov_prescribing_name_2,
	prov_prescribing_city,
	prov_prescribing_state,
	prov_prescribing_zip,
	cob_count,
	copay_coinsurance,
	basis_of_cost_determination,
	submitted_ingredient_cost,
	submitted_dispensing_fee,
	basis_of_reimbursement_determination,
	paid_ingredient_cost,
	paid_dispensing_fee,
	paid_gross_due,
	paid_patient_pay,
	coupon_type,
	coupon_number,
	coupon_value,
	pharmacy_other_id,
	pharmacy_other_qual,
	pharmacy_postal_code,
	logical_delete_reason_date,
	'Reversed Claim' AS logical_delete_reason,
	part_provider,
	part_best_date
 FROM
(
    SELECT
        record_id,
    	claim_id,
    	hvid,
        created,
    	model_version,
    	data_set,
    	data_feed,
    	data_vendor,
    	patient_gender,
    	patient_age,
    	patient_year_of_birth,
    	patient_zip3,
    	patient_state,
    	date_service,
    	date_written,
    	response_code_vendor,
    	diagnosis_code,
    	diagnosis_code_qual,
    	ndc_code,
    	rx_number,
    	rx_number_qual,
    	bin_number,
    	processor_control_number,
    	fill_number,
    	refill_auth_amount,
    	dispensed_quantity,
    	unit_of_measure,
    	days_supply,
    	pharmacy_npi,
    	payer_name,
    	payer_type,
    	compound_code,
    	dispensed_as_written,
    	prescription_origin,
    	orig_prescribed_product_service_code,
    	orig_prescribed_product_service_code_qual,
    	level_of_service,
    	prov_prescribing_npi,
    	prov_prescribing_dea_id,
    	prov_prescribing_state_license,
    	prov_prescribing_name_1,
    	prov_prescribing_name_2,
    	prov_prescribing_city,
    	prov_prescribing_state,
    	prov_prescribing_zip,
    	cob_count,
    	copay_coinsurance,
    	basis_of_cost_determination,
    	submitted_ingredient_cost,
    	submitted_dispensing_fee,
    	basis_of_reimbursement_determination,
    	paid_ingredient_cost,
    	paid_dispensing_fee,
    	paid_gross_due,
    	paid_patient_pay,
    	coupon_type,
    	coupon_number,
    	coupon_value,
    	pharmacy_other_id,
    	pharmacy_other_qual,
    	pharmacy_postal_code,
    	logical_delete_reason_date,
    	logical_delete_reason,
    	part_provider,
    	part_best_date,
        ROW_NUMBER() OVER
            (
                /* Partition by the columns used in the reversal matching logic. */
                PARTITION BY
                    rx_number,
                    pharmacy_other_id,
                    logical_delete_reason_date,
                    cob_count,
                    paid_ingredient_cost,
                    paid_patient_pay,
                    paid_gross_due
                /* Order by all columns, to ensure a unique sort order. */
                ORDER BY
                        record_id,
                	claim_id,
                	hvid,
                        created,
                	model_version,
                	data_set,
                	data_feed,
                	data_vendor,
                	patient_gender,
                	patient_age,
                	patient_year_of_birth,
                	patient_zip3,
                	patient_state,
                	date_service,
                	date_written,
                	response_code_vendor,
                	diagnosis_code,
                	diagnosis_code_qual,
                	ndc_code,
                	rx_number,
                	rx_number_qual,
                	bin_number,
                	processor_control_number,
                	fill_number,
                	refill_auth_amount,
                	dispensed_quantity,
                	unit_of_measure,
                	days_supply,
                	pharmacy_npi,
                	payer_name,
                	payer_type,
                	compound_code,
                	dispensed_as_written,
                	prescription_origin,
                	orig_prescribed_product_service_code,
                	orig_prescribed_product_service_code_qual,
                	level_of_service,
                	prov_prescribing_npi,
                	prov_prescribing_dea_id,
                	prov_prescribing_state_license,
                	prov_prescribing_name_1,
                	prov_prescribing_name_2,
                	prov_prescribing_city,
                	prov_prescribing_state,
                	prov_prescribing_zip,
                	cob_count,
                	copay_coinsurance,
                	basis_of_cost_determination,
                	submitted_ingredient_cost,
                	submitted_dispensing_fee,
                	basis_of_reimbursement_determination,
                	paid_ingredient_cost,
                	paid_dispensing_fee,
                	paid_gross_due,
                	paid_patient_pay,
                	coupon_type,
                	coupon_number,
                	coupon_value,
                	pharmacy_other_id,
                	pharmacy_other_qual,
                	pharmacy_postal_code,
                	logical_delete_reason_date,
                	logical_delete_reason,
                	part_provider,
                	part_best_date
            ) AS row_num
     FROM pdx_norm_pot_revd
) rvd
/* Take only the first reversed claim that matches each reversal. */
WHERE rvd.row_num = 1
/* Match to reversals based on the matching logic defined in the mapping. */
  AND EXISTS
    (
        SELECT 1
         FROM pdx_norm_txn_norm rvs
        WHERE COALESCE(rvs.logical_delete_reason, '') = 'Reversal'
          AND COALESCE(rvd.rx_number, '') = COALESCE(rvs.rx_number, '')
          AND COALESCE(rvd.pharmacy_other_id, '') = COALESCE(rvs.pharmacy_other_id, '')
          /* Don't match if either date is NULL. */
          AND COALESCE(rvd.logical_delete_reason_date, CAST('1900-01-01' AS DATE)) =
              COALESCE(rvs.logical_delete_reason_date, CAST('1901-01-01' AS DATE))
          AND COALESCE(rvd.cob_count, '') = COALESCE(rvs.cob_count, '')
          AND CAST(COALESCE(rvd.paid_ingredient_cost, 0) AS FLOAT) = CAST(COALESCE(rvs.paid_ingredient_cost, 0) AS FLOAT)
          AND (CAST(COALESCE(rvd.paid_patient_pay, 0) AS FLOAT) + CAST(COALESCE(rvd.paid_gross_due) AS FLOAT)) =
              (CAST(COALESCE(rvs.paid_patient_pay, 0) AS FLOAT) + CAST(COALESCE(rvs.paid_gross_due, 0) AS FLOAT))
          AND
            (
                COALESCE(rvs.ndc_code, '00000000000') = '00000000000'
             OR COALESCE(rvd.ndc_code, '00000000000') = '00000000000'
             OR COALESCE(rvd.ndc_code, '') = COALESCE(rvs.ndc_code, '')
            )
    )
