-- Create table to hold the basic structre of a professional claim
DROP TABLE IF EXISTS emdeon_professional_claims_base;
CREATE TABLE emdeon_professional_claims_base(claim_id text ENCODE lzo,
accident_related text ENCODE lzo,
adjudicated_proc_modifier_1 text ENCODE lzo,
adjudicated_proc_modifier_2 text ENCODE lzo,
adjudicated_proc_modifier_3 text ENCODE lzo,
adjudicated_proc_modifier_4 text ENCODE lzo,
adjudicated_procedure text ENCODE lzo,
adjudicated_procedure_qual text ENCODE lzo,
admission_hour text ENCODE lzo,
amb_hosp_to_hosp text ENCODE lzo,
amb_nurse_to_diag text ENCODE lzo,
amb_nurse_to_hosp text ENCODE lzo,
ambulance_to_hosp text ENCODE lzo,
assignment_sign text ENCODE lzo,
bene_not_entitled text ENCODE lzo,
claim_filing_ind_cd text ENCODE lzo,
claim_type text ENCODE lzo,
cob_group_name_1 text ENCODE lzo,
cob_group_name_2 text ENCODE lzo,
cob_group_policy_nbr_1 text ENCODE lzo,
cob_group_policy_nbr_2 text ENCODE lzo,
cob_ins_type_code_1 text ENCODE lzo,
cob_ins_type_code_2 text ENCODE lzo,
cob_payer_claim_filing_ind_code_1 text ENCODE lzo,
cob_payer_claim_filing_ind_code_2 text ENCODE lzo,
cob_payer_hpid_1 text ENCODE lzo,
cob_payer_hpid_2 text ENCODE lzo,
cob_payer_id_1 text ENCODE lzo,
cob_payer_id_2 text ENCODE lzo,
cob_payer_name_1 text ENCODE lzo,
cob_payer_name_2 text ENCODE lzo,
cob_payer_seq_code_1 text ENCODE lzo,
cob_payer_seq_code_2 text ENCODE lzo,
cob_relationship_cd_1 text ENCODE lzo,
cob_relationship_cd_2 text ENCODE lzo,
contract_allow_ind text ENCODE lzo,
copay text ENCODE lzo,
date_paid text ENCODE lzo,
date_received text ENCODE lzo,
date_service text ENCODE lzo,
date_service_end text ENCODE lzo,
diagnosis_code_qual text ENCODE lzo,
diag_concat text ENCODE lzo,
svcptr_concat text ENCODE lzo,
related text ENCODE lzo,
dialysis_related text ENCODE lzo,
discharge_hour text ENCODE lzo,
electronic_claim text ENCODE lzo,
emergency text ENCODE lzo,
esrd_patient text ENCODE lzo,
explanation_code text ENCODE lzo,
group_name text ENCODE lzo,
hosp_admis_or_er text ENCODE lzo,
in_out_network text ENCODE lzo,
initial_procedure text ENCODE lzo,
inst_admit_source_std_id text ENCODE lzo,
inst_admit_type_std_id text ENCODE lzo,
inst_date_admitted text ENCODE lzo,
inst_discharge_status_std_id text ENCODE lzo,
inst_drg_std_id text ENCODE lzo,
inst_type_of_bill_std_id text ENCODE lzo,
line_allowed text ENCODE lzo,
line_charge text ENCODE lzo,
medical_coverage_type text ENCODE lzo,
member_adr_city text ENCODE lzo,
member_adr_line1 text ENCODE lzo,
member_adr_line2 text ENCODE lzo,
member_adr_state text ENCODE lzo,
member_adr_zip text ENCODE lzo,
member_dob text ENCODE lzo,
member_fname text ENCODE lzo,
member_gender text ENCODE lzo,
member_id text ENCODE lzo,
member_lname text ENCODE lzo,
ndc_code text ENCODE lzo,
new_patient text ENCODE lzo,
not_covrd_specialt text ENCODE lzo,
operating_pr_commercial text ENCODE lzo,
operating_pr_first_name text ENCODE lzo,
operating_pr_last_name text ENCODE lzo,
operating_pr_location text ENCODE lzo,
operating_pr_middle_name text ENCODE lzo,
operating_pr_npi text ENCODE lzo,
operating_pr_org_name text ENCODE lzo,
operating_pr_state_lic text ENCODE lzo,
operating_pr_upin text ENCODE lzo,
oral_cavity text ENCODE lzo,
oth_operating_pr_commercial text ENCODE lzo,
oth_operating_pr_first_name text ENCODE lzo,
oth_operating_pr_last_name text ENCODE lzo,
oth_operating_pr_location text ENCODE lzo,
oth_operating_pr_middle_name text ENCODE lzo,
oth_operating_pr_npi text ENCODE lzo,
oth_operating_pr_org_name text ENCODE lzo,
oth_operating_pr_state_lic text ENCODE lzo,
oth_operating_pr_upin text ENCODE lzo,
paid_amount text ENCODE lzo,
patient_age text ENCODE lzo,
patient_control text ENCODE lzo,
patient_dob text ENCODE lzo,
patient_fname text ENCODE lzo,
patient_gender text ENCODE lzo,
patient_id text ENCODE lzo,
patient_lname text ENCODE lzo,
patient_reach_max text ENCODE lzo,
patient_relation text ENCODE lzo,
pay_to_plan_address_1 text ENCODE lzo,
pay_to_plan_address_2 text ENCODE lzo,
pay_to_plan_city text ENCODE lzo,
pay_to_plan_clm_ofc_number text ENCODE lzo,
pay_to_plan_naic_id text ENCODE lzo,
pay_to_plan_name text ENCODE lzo,
pay_to_plan_payer_id text ENCODE lzo,
pay_to_plan_plan_id text ENCODE lzo,
pay_to_plan_state text ENCODE lzo,
pay_to_plan_tax_id text ENCODE lzo,
pay_to_plan_zip text ENCODE lzo,
pay_to_prov_address_1 text ENCODE lzo,
pay_to_prov_address_2 text ENCODE lzo,
pay_to_prov_city text ENCODE lzo,
pay_to_prov_state text ENCODE lzo,
pay_to_prov_zip text ENCODE lzo,
payer_name text ENCODE lzo,
payer_vendor_id text ENCODE lzo,
place_of_service_std_id text ENCODE lzo,
procedure_code text ENCODE lzo,
procedure_code_qual text ENCODE lzo,
procedure_modifier_1 text ENCODE lzo,
procedure_modifier_2 text ENCODE lzo,
procedure_modifier_3 text ENCODE lzo,
procedure_modifier_4 text ENCODE lzo,
procedure_units text ENCODE lzo,
prov_billing_address_1 text ENCODE lzo,
prov_billing_address_2 text ENCODE lzo,
prov_billing_city text ENCODE lzo,
prov_billing_name_1 text ENCODE lzo,
prov_billing_name_2 text ENCODE lzo,
prov_billing_npi text ENCODE lzo,
prov_billing_ssn text ENCODE lzo,
prov_billing_state text ENCODE lzo,
prov_billing_state_license text ENCODE lzo,
prov_billing_std_taxonomy text ENCODE lzo,
prov_billing_tax_id text ENCODE lzo,
prov_billing_upin text ENCODE lzo,
prov_billing_zip text ENCODE lzo,
prov_facility_address_1 text ENCODE lzo,
prov_facility_address_2 text ENCODE lzo,
prov_facility_city text ENCODE lzo,
prov_facility_name_1 text ENCODE lzo,
prov_facility_name_2 text ENCODE lzo,
prov_facility_npi text ENCODE lzo,
prov_facility_state text ENCODE lzo,
prov_facility_state_license text ENCODE lzo,
prov_facility_tax_id text ENCODE lzo,
prov_facility_zip text ENCODE lzo,
prov_referring_commercial_id text ENCODE lzo,
prov_referring_name_1 text ENCODE lzo,
prov_referring_name_2 text ENCODE lzo,
prov_referring_npi text ENCODE lzo,
prov_referring_state_license text ENCODE lzo,
prov_referring_tax_id text ENCODE lzo,
prov_referring_upin text ENCODE lzo,
prov_rendering_name_1 text ENCODE lzo,
prov_rendering_name_2 text ENCODE lzo,
prov_rendering_npi text ENCODE lzo,
prov_rendering_state_license text ENCODE lzo,
prov_rendering_std_taxonomy text ENCODE lzo,
prov_rendering_tax_id text ENCODE lzo,
prov_rendering_upin text ENCODE lzo,
prov_specialty text ENCODE lzo,
release_sign text ENCODE lzo,
revenue_code text ENCODE lzo,
service_line_number text ENCODE lzo,
statement_from text ENCODE lzo,
statement_to text ENCODE lzo,
sub_client_id text ENCODE lzo,
supervising_pr_commercial text ENCODE lzo,
supervising_pr_first_name text ENCODE lzo,
supervising_pr_last_name text ENCODE lzo,
supervising_pr_location text ENCODE lzo,
supervising_pr_middle_name text ENCODE lzo,
supervising_pr_npi text ENCODE lzo,
supervising_pr_org_name text ENCODE lzo,
supervising_pr_state_lic text ENCODE lzo,
supervising_pr_upin text ENCODE lzo,
svc_during_postop text ENCODE lzo,
tooth_number text ENCODE lzo,
tooth_surface text ENCODE lzo,
total_allowed text ENCODE lzo,
total_charge text ENCODE lzo,
type_service text ENCODE lzo)
DISTKEY(claim_id) SORTKEY(claim_id);

DROP TABLE IF EXISTS related_diags_tmp;
CREATE TABLE related_diags_tmp (claim_id text ENCODE lzo, related text ENCODE lzo) DISTKEY(claim_id) SORTKEY(claim_id);

DROP TABLE IF EXISTS related_diags;
CREATE TABLE related_diags (claim_id text ENCODE lzo, related varchar(5000) ENCODE lzo) DISTKEY(claim_id) SORTKEY(claim_id);

DROP TABLE IF EXISTS emdeon_professional_claims_unrelated;
CREATE TABLE emdeon_professional_claims_unrelated (accident_related text ENCODE lzo,
admission_hour text ENCODE lzo,
amb_hosp_to_hosp text ENCODE lzo,
amb_nurse_to_diag text ENCODE lzo,
amb_nurse_to_hosp text ENCODE lzo,
assignment_sign text ENCODE lzo,
claim_id text ENCODE lzo,
claim_type text ENCODE lzo,
contract_allow_ind text ENCODE lzo,
date_received text ENCODE lzo,
diagnosis_code_qual text ENCODE lzo,
dialysis_related text ENCODE lzo,
discharge_hour text ENCODE lzo,
electronic_claim text ENCODE lzo,
esrd_patient text ENCODE lzo,
explanation_code text ENCODE lzo,
group_name text ENCODE lzo,
hosp_admis_or_er text ENCODE lzo,
in_out_network text ENCODE lzo,
initial_procedure text ENCODE lzo,
inst_admit_source_std_id text ENCODE lzo,
inst_admit_type_std_id text ENCODE lzo,
inst_date_admitted text ENCODE lzo,
inst_discharge_status_std_id text ENCODE lzo,
inst_drg_std_id text ENCODE lzo,
inst_type_of_bill_std_id text ENCODE lzo,
medical_coverage_type text ENCODE lzo,
member_adr_city text ENCODE lzo,
member_adr_line1 text ENCODE lzo,
member_adr_line2 text ENCODE lzo,
member_adr_state text ENCODE lzo,
member_adr_zip text ENCODE lzo,
member_dob text ENCODE lzo,
member_fname text ENCODE lzo,
member_gender text ENCODE lzo,
member_id text ENCODE lzo,
member_lname text ENCODE lzo,
new_patient text ENCODE lzo,
not_covrd_specialt text ENCODE lzo,
patient_age text ENCODE lzo,
patient_control text ENCODE lzo,
patient_dob text ENCODE lzo,
patient_fname text ENCODE lzo,
patient_gender text ENCODE lzo,
patient_id text ENCODE lzo,
patient_lname text ENCODE lzo,
patient_relation text ENCODE lzo,
payer_name text ENCODE lzo,
payer_vendor_id text ENCODE lzo,
prov_billing_address_1 text ENCODE lzo,
prov_billing_address_2 text ENCODE lzo,
prov_billing_city text ENCODE lzo,
prov_billing_name_1 text ENCODE lzo,
prov_billing_name_2 text ENCODE lzo,
prov_billing_npi text ENCODE lzo,
prov_billing_ssn text ENCODE lzo,
prov_billing_state text ENCODE lzo,
prov_billing_state_license text ENCODE lzo,
prov_billing_std_taxonomy text ENCODE lzo,
prov_billing_tax_id text ENCODE lzo,
prov_billing_upin text ENCODE lzo,
prov_billing_zip text ENCODE lzo,
prov_facility_address_1 text ENCODE lzo,
prov_facility_address_2 text ENCODE lzo,
prov_facility_city text ENCODE lzo,
prov_facility_name_1 text ENCODE lzo,
prov_facility_name_2 text ENCODE lzo,
prov_facility_npi text ENCODE lzo,
prov_facility_state text ENCODE lzo,
prov_facility_state_license text ENCODE lzo,
prov_facility_tax_id text ENCODE lzo,
prov_facility_zip text ENCODE lzo,
prov_referring_name_1 text ENCODE lzo,
prov_referring_name_2 text ENCODE lzo,
prov_referring_npi text ENCODE lzo,
prov_referring_tax_id text ENCODE lzo,
prov_rendering_name_1 text ENCODE lzo,
prov_rendering_name_2 text ENCODE lzo,
prov_rendering_npi text ENCODE lzo,
prov_rendering_state_license text ENCODE lzo,
prov_rendering_std_taxonomy text ENCODE lzo,
prov_rendering_tax_id text ENCODE lzo,
prov_rendering_upin text ENCODE lzo,
prov_specialty text ENCODE lzo,
release_sign text ENCODE lzo,
statement_from text ENCODE lzo,
statement_to text ENCODE lzo,
sub_client_id text ENCODE lzo,
tooth_number text ENCODE lzo,
total_allowed text ENCODE lzo,
total_charge text ENCODE lzo,
date_service text ENCODE lzo,
date_service_end text ENCODE lzo,
unrelated text ENCODE lzo)
DISTKEY(claim_id) SORTKEY(claim_id);

INSERT INTO emdeon_professional_claims_base SELECT emdeon_dx_raw_claims.claim_id AS claim_id,
accident_related,
adjudicated_proc_modifier_1,
adjudicated_proc_modifier_2,
adjudicated_proc_modifier_3,
adjudicated_proc_modifier_4,
adjudicated_procedure,
adjudicated_procedure_qual,
admission_hour,
amb_hosp_to_hosp,
amb_nurse_to_diag,
amb_nurse_to_hosp,
ambulance_to_hosp,
assignment_sign,
bene_not_entitled,
claim_filing_ind_cd,
claim_type,
cob_group_name_1,
cob_group_name_2,
cob_group_policy_nbr_1,
cob_group_policy_nbr_2,
cob_ins_type_code_1,
cob_ins_type_code_2,
cob_payer_claim_filing_ind_code_1,
cob_payer_claim_filing_ind_code_2,
cob_payer_hpid_1,
cob_payer_hpid_2,
cob_payer_id_1,
cob_payer_id_2,
cob_payer_name_1,
cob_payer_name_2,
cob_payer_seq_code_1,
cob_payer_seq_code_2,
cob_relationship_cd_1,
cob_relationship_cd_2,
contract_allow_ind,
copay,
date_paid,
date_received,
date_service,
date_service_end,
diagnosis_code_qual,
(COALESCE(primary_diagnosis,
'')  || ':' || COALESCE(diagnosis_code_2,
'')  || ':' || COALESCE(diagnosis_code_3,
'')  || ':' || COALESCE(diagnosis_code_4,
'')  || ':' || COALESCE(diagnosis_code_5,
'')  || ':' || COALESCE(diagnosis_code_6,
'')  || ':' || COALESCE(diagnosis_code_7,
'')  || ':' || COALESCE(diagnosis_code_8,
'')  || ':' || COALESCE(diagnosis_code_9,
'')  || ':' || COALESCE(diagnosis_code_10,
'')  || ':' || COALESCE(diagnosis_code_11,
'')  || ':' || COALESCE(diagnosis_code_12,
'')  || ':' || COALESCE(diagnosis_code_13,
'')  || ':' || COALESCE(diagnosis_code_14,
'')  || ':' || COALESCE(diagnosis_code_15,
'')  || ':' || COALESCE(diagnosis_code_16,
'')  || ':' || COALESCE(diagnosis_code_17,
'')  || ':' || COALESCE(diagnosis_code_18,
'')  || ':' || COALESCE(diagnosis_code_19,
'')  || ':' || COALESCE(diagnosis_code_20,
'')  || ':' || COALESCE(diagnosis_code_21,
'')  || ':' || COALESCE(diagnosis_code_22,
'')  || ':' || COALESCE(diagnosis_code_23,
'')  || ':' || COALESCE(diagnosis_code_24,
'')  || ':' || COALESCE(diagnosis_code_25,
'')  || ':' || COALESCE(admit_diagnosis,
'')),
(COALESCE(diagnosis_pointer_1,
'')  || ':' || COALESCE(diagnosis_pointer_2,
'')  || ':' || COALESCE(diagnosis_pointer_3,
'')  || ':' || COALESCE(diagnosis_pointer_4,
'')  || ':' || COALESCE(diagnosis_pointer_5,
'')  || ':' || COALESCE(diagnosis_pointer_6,
'')  || ':' || COALESCE(diagnosis_pointer_7,
'')  || ':' || COALESCE(diagnosis_pointer_8,
'')),
get_diagnosis_with_priority((COALESCE(primary_diagnosis,
'')  || ':' || COALESCE(diagnosis_code_2,
'')  || ':' || COALESCE(diagnosis_code_3,
'')  || ':' || COALESCE(diagnosis_code_4,
'')  || ':' || COALESCE(diagnosis_code_5,
'')  || ':' || COALESCE(diagnosis_code_6,
'')  || ':' || COALESCE(diagnosis_code_7,
'')  || ':' || COALESCE(diagnosis_code_8,
'')  || ':' || COALESCE(diagnosis_code_9,
'')  || ':' || COALESCE(diagnosis_code_10,
'')  || ':' || COALESCE(diagnosis_code_11,
'')  || ':' || COALESCE(diagnosis_code_12,
'')  || ':' || COALESCE(diagnosis_code_13,
'')  || ':' || COALESCE(diagnosis_code_14,
'')  || ':' || COALESCE(diagnosis_code_15,
'')  || ':' || COALESCE(diagnosis_code_16,
'')  || ':' || COALESCE(diagnosis_code_17,
'')  || ':' || COALESCE(diagnosis_code_18,
'')  || ':' || COALESCE(diagnosis_code_19,
'')  || ':' || COALESCE(diagnosis_code_20,
'')  || ':' || COALESCE(diagnosis_code_21,
'')  || ':' || COALESCE(diagnosis_code_22,
'')  || ':' || COALESCE(diagnosis_code_23,
'')  || ':' || COALESCE(diagnosis_code_24,
'')  || ':' || COALESCE(diagnosis_code_25,
'')  || ':' || COALESCE(admit_diagnosis,
'')),
(COALESCE(diagnosis_pointer_1,
'')  || ':' || COALESCE(diagnosis_pointer_2,
'')  || ':' || COALESCE(diagnosis_pointer_3,
'')  || ':' || COALESCE(diagnosis_pointer_4,
'')  || ':' || COALESCE(diagnosis_pointer_5,
'')  || ':' || COALESCE(diagnosis_pointer_6,
'')  || ':' || COALESCE(diagnosis_pointer_7,
'')  || ':' || COALESCE(diagnosis_pointer_8,
''))) as related,
dialysis_related,
discharge_hour,
electronic_claim,
emergency,
esrd_patient,
explanation_code,
group_name,
hosp_admis_or_er,
in_out_network,
initial_procedure,
inst_admit_source_std_id,
inst_admit_type_std_id,
inst_date_admitted,
inst_discharge_status_std_id,
inst_drg_std_id,
inst_type_of_bill_std_id,
line_allowed,
line_charge,
medical_coverage_type,
member_adr_city,
member_adr_line1,
member_adr_line2,
member_adr_state,
member_adr_zip,
member_dob,
member_fname,
member_gender,
member_id,
member_lname,
ndc_code,
new_patient,
not_covrd_specialt,
operating_pr_commercial,
operating_pr_first_name,
operating_pr_last_name,
operating_pr_location,
operating_pr_middle_name,
operating_pr_npi,
operating_pr_org_name,
operating_pr_state_lic,
operating_pr_upin,
oral_cavity,
oth_operating_pr_commercial,
oth_operating_pr_first_name,
oth_operating_pr_last_name,
oth_operating_pr_location,
oth_operating_pr_middle_name,
oth_operating_pr_npi,
oth_operating_pr_org_name,
oth_operating_pr_state_lic,
oth_operating_pr_upin,
paid_amount,
patient_age,
patient_control,
patient_dob,
patient_fname,
patient_gender,
patient_id,
patient_lname,
patient_reach_max,
patient_relation,
pay_to_plan_address_1,
pay_to_plan_address_2,
pay_to_plan_city,
pay_to_plan_clm_ofc_number,
pay_to_plan_naic_id,
pay_to_plan_name,
pay_to_plan_payer_id,
pay_to_plan_plan_id,
pay_to_plan_state,
pay_to_plan_tax_id,
pay_to_plan_zip,
pay_to_prov_address_1,
pay_to_prov_address_2,
pay_to_prov_city,
pay_to_prov_state,
pay_to_prov_zip,
payer_name,
payer_vendor_id,
place_of_service_std_id,
procedure_code,
procedure_code_qual,
procedure_modifier_1,
procedure_modifier_2,
procedure_modifier_3,
procedure_modifier_4,
procedure_units,
prov_billing_address_1,
prov_billing_address_2,
prov_billing_city,
prov_billing_name_1,
prov_billing_name_2,
prov_billing_npi,
prov_billing_ssn,
prov_billing_state,
prov_billing_state_license,
prov_billing_std_taxonomy,
prov_billing_tax_id,
prov_billing_upin,
prov_billing_zip,
prov_facility_address_1,
prov_facility_address_2,
prov_facility_city,
prov_facility_name_1,
prov_facility_name_2,
prov_facility_npi,
prov_facility_state,
prov_facility_state_license,
prov_facility_tax_id,
prov_facility_zip,
prov_referring_commercial_id,
prov_referring_name_1,
prov_referring_name_2,
prov_referring_npi,
prov_referring_state_license,
prov_referring_tax_id,
prov_referring_upin,
prov_rendering_name_1,
prov_rendering_name_2,
prov_rendering_npi,
prov_rendering_state_license,
prov_rendering_std_taxonomy,
prov_rendering_tax_id,
prov_rendering_upin,
prov_specialty,
release_sign,
revenue_code,
service_line_number,
statement_from,
statement_to,
sub_client_id,
supervising_pr_commercial,
supervising_pr_first_name,
supervising_pr_last_name,
supervising_pr_location,
supervising_pr_middle_name,
supervising_pr_npi,
supervising_pr_org_name,
supervising_pr_state_lic,
supervising_pr_upin,
svc_during_postop,
tooth_number,
tooth_surface,
total_allowed,
total_charge,
type_service
FROM emdeon_dx_raw_claims
    LEFT JOIN emdeon_dx_raw_diagnosis USING (claim_id)
    INNER JOIN emdeon_dx_raw_service USING (claim_id)
WHERE claim_type='P';

INSERT INTO medicalclaims_common_model (claim_id,
hvid,
patient_gender,
patient_age,
patient_year_of_birth,
patient_zip3,
patient_state,
claim_type,
date_received,
date_service,
date_service_end,
inst_date_admitted,
inst_admit_type_std_id,
inst_admit_source_std_id,
inst_discharge_status_std_id,
inst_type_of_bill_std_id,
inst_drg_std_id,
place_of_service_std_id,
service_line_number,
diagnosis_code,
diagnosis_code_qual,
diagnosis_priority,
procedure_code,
procedure_code_qual,
procedure_units,
procedure_modifier_1,
procedure_modifier_2,
procedure_modifier_3,
procedure_modifier_4,
revenue_code,
ndc_code,
medical_coverage_type,
line_charge,
line_allowed,
total_charge,
total_allowed,
prov_rendering_npi,
prov_billing_npi,
prov_referring_npi,
prov_facility_npi,
payer_vendor_id,
payer_name,
payer_parent_name,
prov_rendering_tax_id,
prov_rendering_upin,
prov_rendering_name_1,
prov_rendering_name_2,
prov_rendering_std_taxonomy,
prov_rendering_vendor_specialty,
prov_billing_tax_id,
prov_billing_ssn,
prov_billing_state_license,
prov_billing_upin,
prov_billing_name_1,
prov_billing_name_2,
prov_billing_address_1,
prov_billing_address_2,
prov_billing_city,
prov_billing_state,
prov_billing_zip,
prov_billing_std_taxonomy,
prov_referring_tax_id,
prov_referring_state_license,
prov_referring_upin,
prov_referring_commercial_id,
prov_referring_name_1,
prov_referring_name_2,
prov_facility_tax_id,
prov_facility_state_license,
prov_facility_name_1,
prov_facility_name_2,
prov_facility_address_1,
prov_facility_address_2,
prov_facility_city,
prov_facility_state,
prov_facility_zip,
cob_payer_vendor_id_1,
cob_payer_seq_code_1,
cob_payer_hpid_1,
cob_payer_claim_filing_ind_code_1,
cob_ins_type_code_1,
cob_payer_vendor_id_2,
cob_payer_seq_code_2,
cob_payer_hpid_2,
cob_payer_claim_filing_ind_code_2,
cob_ins_type_code_2)
SELECT b.claim_id,
hvid,
patient_gender,
patient_age,
-- 32873 is roughly 90 years, Redshift doesn't support year intervals
CASE WHEN date_service IS NOT NULL AND (patient_dob >= (extract('year' from date_service::date - '32873 days'::interval)::text)) AND patient_dob <= (extract('year' from getdate())::text) THEN patient_dob ELSE NULL END as patient_year_of_birth,
threedigitzip as patient_zip3,
state as patient_state,
claim_type,
date_received,
date_service,
date_service_end,
inst_date_admitted,
inst_admit_type_std_id,
inst_admit_source_std_id,
inst_discharge_status_std_id,
inst_type_of_bill_std_id,
inst_drg_std_id,
place_of_service_std_id,
service_line_number,
upper(replace(replace(split_part(split_part(related,':',n),'_',1), ' ', ''), ',', '')) as diagnosis_code,
CASE WHEN diagnosis_code_qual = '9' THEN '01' WHEN diagnosis_code_qual = 'X' THEN '02' END,
split_part(split_part(related,':',n),'_',2) as diagnosis_priority,
upper(replace(replace(procedure_code, ' ', ''), ',', '')) as procedure_code,
procedure_code_qual,
procedure_units,
procedure_modifier_1,
procedure_modifier_2,
procedure_modifier_3,
procedure_modifier_4,
revenue_code,
ndc_code,
medical_coverage_type,
line_charge,
line_allowed,
total_charge,
total_allowed,
prov_rendering_npi,
prov_billing_npi,
prov_referring_npi,
prov_facility_npi,
payer_mapping.payer_vendor_id,
payer_mapping.payer_name,
payer_mapping.payer_parent_name,
prov_rendering_tax_id,
prov_rendering_upin,
prov_rendering_name_1,
prov_rendering_name_2,
prov_rendering_std_taxonomy,
prov_specialty as prov_rendering_vendor_specialty,
prov_billing_tax_id,
prov_billing_ssn,
prov_billing_state_license,
prov_billing_upin,
prov_billing_name_1,
prov_billing_name_2,
prov_billing_address_1,
prov_billing_address_2,
prov_billing_city,
prov_billing_state,
prov_billing_zip,
prov_billing_std_taxonomy,
prov_referring_tax_id,
prov_referring_state_license,
prov_referring_upin,
prov_referring_commercial_id,
prov_referring_name_1,
prov_referring_name_2,
prov_facility_tax_id,
prov_facility_state_license,
prov_facility_name_1,
prov_facility_name_2,
prov_facility_address_1,
prov_facility_address_2,
prov_facility_city,
prov_facility_state,
prov_facility_zip,
cob_payer_id_1 as cob_payer_vendor_id_1,
cob_payer_seq_code_1,
cob_payer_hpid_1,
cob_payer_claim_filing_ind_code_1,
cob_ins_type_code_1,
cob_payer_id_2 as cob_payer_vendor_id_2,
cob_payer_seq_code_2,
cob_payer_hpid_2,
cob_payer_claim_filing_ind_code_2,
cob_ins_type_code_2
FROM emdeon_professional_claims_base b
    CROSS JOIN split_indices
    LEFT JOIN matching_payload ON b.claim_id = claimid
    LEFT JOIN zip3_to_state ON threeDigitZip = zip3
    LEFT JOIN payer_mapping USING (payer_vendor_id)
WHERE split_part(related,':',n) IS NOT NULL AND split_part(related,':',n) != '';

-- There can be a lot of raws with the same diagnosis. Only extract unique ones
INSERT INTO related_diags_tmp
SELECT DISTINCT claim_id, related
FROM emdeon_professional_claims_base;

INSERT INTO related_diags
SELECT claim_id, listagg(related,':') within group (order by related) AS related
FROM related_diags_tmp GROUP BY claim_id;

INSERT INTO emdeon_professional_claims_unrelated
SELECT accident_related,
admission_hour,
amb_hosp_to_hosp,
amb_nurse_to_diag,
amb_nurse_to_hosp,
assignment_sign,
e.claim_id,
claim_type,
contract_allow_ind,
date_received,
diagnosis_code_qual,
dialysis_related,
discharge_hour,
electronic_claim,
esrd_patient,
explanation_code,
group_name,
hosp_admis_or_er,
in_out_network,
initial_procedure,
inst_admit_source_std_id,
inst_admit_type_std_id,
inst_date_admitted,
inst_discharge_status_std_id,
inst_drg_std_id,
inst_type_of_bill_std_id,
medical_coverage_type,
member_adr_city,
member_adr_line1,
member_adr_line2,
member_adr_state,
member_adr_zip,
member_dob,
member_fname,
member_gender,
member_id,
member_lname,
new_patient,
not_covrd_specialt,
patient_age,
patient_control,
patient_dob,
patient_fname,
patient_gender,
patient_id,
patient_lname,
patient_relation,
payer_name,
payer_vendor_id,
prov_billing_address_1,
prov_billing_address_2,
prov_billing_city,
prov_billing_name_1,
prov_billing_name_2,
prov_billing_npi,
prov_billing_ssn,
prov_billing_state,
prov_billing_state_license,
prov_billing_std_taxonomy,
prov_billing_tax_id,
prov_billing_upin,
prov_billing_zip,
prov_facility_address_1,
prov_facility_address_2,
prov_facility_city,
prov_facility_name_1,
prov_facility_name_2,
prov_facility_npi,
prov_facility_state,
prov_facility_state_license,
prov_facility_tax_id,
prov_facility_zip,
prov_referring_name_1,
prov_referring_name_2,
prov_referring_npi,
prov_referring_tax_id,
prov_rendering_name_1,
prov_rendering_name_2,
prov_rendering_npi,
prov_rendering_state_license,
prov_rendering_std_taxonomy,
prov_rendering_tax_id,
prov_rendering_upin,
prov_specialty,
release_sign,
statement_from,
statement_to,
sub_client_id,
tooth_number,
total_allowed,
total_charge,
date_service,
date_service as date_service_end,
string_set_diff(diag_concat,
rd.related) as unrelated 
FROM emdeon_professional_claims_base e 
    INNER JOIN related_diags rd USING (claim_id) 
WHERE service_line_number = '1';

INSERT INTO medicalclaims_common_model (claim_id,
hvid,
patient_gender,
patient_age,
patient_year_of_birth,
patient_zip3,
patient_state,
claim_type,
date_received,
date_service,
date_service_end,
inst_date_admitted,
inst_admit_type_std_id,
inst_admit_source_std_id,
inst_discharge_status_std_id,
inst_type_of_bill_std_id,
inst_drg_std_id,
diagnosis_code,
diagnosis_code_qual,
medical_coverage_type,
total_charge,
total_allowed,
prov_rendering_npi,
prov_billing_npi,
prov_referring_npi,
prov_facility_npi,
payer_vendor_id,
payer_name,
payer_parent_name,
prov_rendering_tax_id,
prov_rendering_upin,
prov_rendering_name_1,
prov_rendering_name_2,
prov_rendering_std_taxonomy,
prov_rendering_vendor_specialty,
prov_billing_tax_id,
prov_billing_ssn,
prov_billing_state_license,
prov_billing_upin,
prov_billing_name_1,
prov_billing_name_2,
prov_billing_address_1,
prov_billing_address_2,
prov_billing_city,
prov_billing_state,
prov_billing_zip,
prov_billing_std_taxonomy,
prov_referring_tax_id,
prov_referring_name_1,
prov_referring_name_2,
prov_facility_tax_id,
prov_facility_state_license,
prov_facility_name_1,
prov_facility_name_2,
prov_facility_address_1,
prov_facility_address_2,
prov_facility_city,
prov_facility_state,
prov_facility_zip)
SELECT b.claim_id,
hvid,
patient_gender,
patient_age,
-- 32873 is roughly 90 years, Redshift doesn't support year intervals
CASE WHEN statement_from IS NOT NULL AND (patient_dob >= (extract('year' from statement_from::date - '32873 days'::interval)::text)) AND patient_dob <= (extract('year' from getdate())::text) THEN patient_dob ELSE NULL END as patient_year_of_birth,
threeDigitZip as patient_zip3,
state as patient_state,
claim_type,
date_received,
statement_from_date.formatted,
statement_to_date.formatted,
inst_date_admitted,
inst_admit_type_std_id,
inst_admit_source_std_id,
inst_discharge_status_std_id,
inst_type_of_bill_std_id,
inst_drg_std_id,
upper(replace(replace(split_part(unrelated,':',n), ' ', ''), ',', '')) as diagnosis_code,
CASE WHEN diagnosis_code_qual = '9' THEN '01' WHEN diagnosis_code_qual = 'X' THEN '02' END,
medical_coverage_type,
total_charge,
total_allowed,
prov_rendering_npi,
prov_billing_npi,
prov_referring_npi,
prov_facility_npi,
payer_mapping.payer_vendor_id,
payer_mapping.payer_name,
payer_mapping.payer_parent_name,
prov_rendering_tax_id,
prov_rendering_upin,
prov_rendering_name_1,
prov_rendering_name_2,
prov_rendering_std_taxonomy,
prov_specialty AS prov_rendering_vendor_specialty,
prov_billing_tax_id,
prov_billing_ssn,
prov_billing_state_license,
prov_billing_upin,
prov_billing_name_1,
prov_billing_name_2,
prov_billing_address_1,
prov_billing_address_2,
prov_billing_city,
prov_billing_state,
prov_billing_zip,
prov_billing_std_taxonomy,
prov_referring_tax_id,
prov_referring_name_1,
prov_referring_name_2,
prov_facility_tax_id,
prov_facility_state_license,
prov_facility_name_1,
prov_facility_name_2,
prov_facility_address_1,
prov_facility_address_2,
prov_facility_city,
prov_facility_state,
prov_facility_zip
FROM emdeon_professional_claims_unrelated b
    CROSS JOIN split_indices
    LEFT JOIN matching_payload ON b.claim_id = claimid
    LEFT JOIN zip3_to_state ON threeDigitZip = zip3
    LEFT JOIN dates statement_from_date ON statement_from = statement_from_date.date
    LEFT JOIN dates statement_to_date ON statement_to = statement_to_date.date
    LEFT JOIN payer_mapping USING (payer_vendor_id)
WHERE split_part(unrelated,':',n) IS NOT NULL AND split_part(unrelated,':',n) != '';

