-- Create a table for medical claim data
DROP TABLE IF EXISTS emdeon_dx_raw_claims;
CREATE TABLE emdeon_dx_raw_claims (claim_id text ENCODE lzo,
payer_vendor_id text ENCODE lzo,
diagnosis_code_qual text ENCODE lzo,
date_received text ENCODE lzo,
claim_type text ENCODE lzo,
contract_allow_ind text ENCODE lzo,
payer_name text ENCODE lzo,
sub_client_id text ENCODE lzo,
group_name text ENCODE lzo,
member_id text ENCODE lzo,
member_fname text ENCODE lzo,
member_lname text ENCODE lzo,
member_gender text ENCODE lzo,
member_dob text ENCODE lzo,
member_adr_line1 text ENCODE lzo,
member_adr_line2 text ENCODE lzo,
member_adr_city text ENCODE lzo,
member_adr_state text ENCODE lzo,
member_adr_zip text ENCODE lzo,
patient_id text ENCODE lzo,
patient_relation text ENCODE lzo,
patient_fname text ENCODE lzo,
patient_lname text ENCODE lzo,
patient_gender text ENCODE lzo,
patient_dob text ENCODE lzo,
patient_age text ENCODE lzo,
prov_billing_tax_id text ENCODE lzo,
prov_billing_npi text ENCODE lzo,
prov_billing_name_1 text ENCODE lzo,
prov_billing_name_2 text ENCODE lzo,
prov_billing_address_1 text ENCODE lzo,
prov_billing_address_2 text ENCODE lzo,
prov_billing_city text ENCODE lzo,
prov_billing_state text ENCODE lzo,
prov_billing_zip text ENCODE lzo,
prov_referring_tax_id text ENCODE lzo,
prov_referring_npi text ENCODE lzo,
prov_referring_name_1 text ENCODE lzo,
prov_referring_name_2 text ENCODE lzo,
prov_rendering_tax_id text ENCODE lzo,
prov_rendering_npi text ENCODE lzo,
prov_rendering_name_1 text ENCODE lzo,
prov_rendering_name_2 text ENCODE lzo,
prov_facility_tax_id text ENCODE lzo,
prov_facility_name_1 text ENCODE lzo,
prov_facility_name_2 text ENCODE lzo,
prov_facility_address_1 text ENCODE lzo,
prov_facility_address_2 text ENCODE lzo,
prov_facility_city text ENCODE lzo,
prov_facility_state text ENCODE lzo,
prov_facility_zip text ENCODE lzo,
statement_from text ENCODE lzo,
statement_to text ENCODE lzo,
total_charge text ENCODE lzo,
total_allowed text ENCODE lzo,
inst_drg_std_id text ENCODE lzo,
patient_control text ENCODE lzo,
inst_type_of_bill_std_id text ENCODE lzo,
release_sign text ENCODE lzo,
assignment_sign text ENCODE lzo,
in_out_network text ENCODE lzo,
principal_procedure text ENCODE lzo,
admit_diagnosis text ENCODE lzo,
primary_diagnosis text ENCODE lzo,
diagnosis_code_2 text ENCODE lzo,
diagnosis_code_3 text ENCODE lzo,
diagnosis_code_4 text ENCODE lzo,
diagnosis_code_5 text ENCODE lzo,
diagnosis_code_6 text ENCODE lzo,
diagnosis_code_7 text ENCODE lzo,
diagnosis_code_8 text ENCODE lzo,
other_proc_code_2 text ENCODE lzo,
other_proc_code_3 text ENCODE lzo,
other_proc_code_4 text ENCODE lzo,
other_proc_code_5 text ENCODE lzo,
other_proc_code_6 text ENCODE lzo,
prov_specialty text ENCODE lzo,
medical_coverage_type text ENCODE lzo,
explanation_code text ENCODE lzo,
accident_related text ENCODE lzo,
esrd_patient text ENCODE lzo,
hosp_admis_or_er text ENCODE lzo,
amb_nurse_to_hosp text ENCODE lzo,
not_covrd_specialt text ENCODE lzo,
electronic_claim text ENCODE lzo,
dialysis_related text ENCODE lzo,
new_patient text ENCODE lzo,
initial_procedure text ENCODE lzo,
amb_nurse_to_diag text ENCODE lzo,
amb_hosp_to_hosp text ENCODE lzo,
inst_date_admitted text ENCODE lzo,
admission_hour text ENCODE lzo,
inst_admit_type_std_id text ENCODE lzo,
inst_admit_source_std_id text ENCODE lzo,
discharge_hour text ENCODE lzo,
inst_discharge_status_std_id text ENCODE lzo,
tooth_number text ENCODE lzo,
other_proc_code_7 text ENCODE lzo,
other_proc_code_8 text ENCODE lzo,
other_proc_code_9 text ENCODE lzo,
other_proc_code_10 text ENCODE lzo,
prov_billing_std_taxonomy text ENCODE lzo,
prov_billing_state_license text ENCODE lzo,
prov_billing_upin text ENCODE lzo,
prov_billing_ssn text ENCODE lzo,
prov_rendering_std_taxonomy text ENCODE lzo,
prov_rendering_state_license text ENCODE lzo,
prov_rendering_upin text ENCODE lzo,
prov_facility_npi text ENCODE lzo,
prov_facility_state_license text ENCODE lzo)
DISTKEY(claim_id);

-- Create a table for medical service data
DROP TABLE IF EXISTS emdeon_dx_raw_service;
CREATE TABLE emdeon_dx_raw_service (claim_id text ENCODE lzo,
service_line_number text ENCODE lzo,
date_service text ENCODE lzo,
date_service_end text ENCODE lzo,
place_of_service_std_id text ENCODE lzo,
procedure_code text ENCODE lzo,
procedure_code_qual text ENCODE lzo,
procedure_modifier_1 text ENCODE lzo,
procedure_modifier_2 text ENCODE lzo,
procedure_modifier_3 text ENCODE lzo,
procedure_modifier_4 text ENCODE lzo,
line_charge text ENCODE lzo,
line_allowed text ENCODE lzo,
procedure_units text ENCODE lzo,
revenue_code text ENCODE lzo,
diagnosis_pointer_1 text ENCODE lzo,
diagnosis_pointer_2 text ENCODE lzo,
diagnosis_pointer_3 text ENCODE lzo,
diagnosis_pointer_4 text ENCODE lzo,
diagnosis_pointer_5 text ENCODE lzo,
diagnosis_pointer_6 text ENCODE lzo,
diagnosis_pointer_7 text ENCODE lzo,
diagnosis_pointer_8 text ENCODE lzo,
ndc_code text ENCODE lzo,
ambulance_to_hosp text ENCODE lzo,
emergency text ENCODE lzo,
tooth_surface text ENCODE lzo,
oral_cavity text ENCODE lzo,
type_service text ENCODE lzo,
copay text ENCODE lzo,
paid_amount text ENCODE lzo,
date_paid text ENCODE lzo,
bene_not_entitled text ENCODE lzo,
patient_reach_max text ENCODE lzo,
svc_during_postop text ENCODE lzo,
adjudicated_procedure text ENCODE lzo,
adjudicated_procedure_qual text ENCODE lzo,
adjudicated_proc_modifier_1 text ENCODE lzo,
adjudicated_proc_modifier_2 text ENCODE lzo,
adjudicated_proc_modifier_3 text ENCODE lzo,
adjudicated_proc_modifier_4 text ENCODE lzo) DISTKEY(claim_id);

-- Create a table for medical diagnosis data
DROP TABLE IF EXISTS emdeon_dx_raw_diagnosis;
CREATE TABLE emdeon_dx_raw_diagnosis (claim_id text ENCODE lzo,
diagnosis_code_9 text ENCODE lzo,
diagnosis_code_10 text ENCODE lzo,
diagnosis_code_11 text ENCODE lzo,
diagnosis_code_12 text ENCODE lzo,
diagnosis_code_13 text ENCODE lzo,
diagnosis_code_14 text ENCODE lzo,
diagnosis_code_15 text ENCODE lzo,
diagnosis_code_16 text ENCODE lzo,
diagnosis_code_17 text ENCODE lzo,
diagnosis_code_18 text ENCODE lzo,
diagnosis_code_19 text ENCODE lzo,
diagnosis_code_20 text ENCODE lzo,
diagnosis_code_21 text ENCODE lzo,
diagnosis_code_22 text ENCODE lzo,
diagnosis_code_23 text ENCODE lzo,
diagnosis_code_24 text ENCODE lzo,
diagnosis_code_25 text ENCODE lzo,
other_proc_code_11 text ENCODE lzo,
other_proc_code_12 text ENCODE lzo,
other_proc_code_13 text ENCODE lzo,
other_proc_code_14 text ENCODE lzo,
other_proc_code_15 text ENCODE lzo,
other_proc_code_16 text ENCODE lzo,
other_proc_code_17 text ENCODE lzo,
other_proc_code_18 text ENCODE lzo,
other_proc_code_19 text ENCODE lzo,
other_proc_code_20 text ENCODE lzo,
other_proc_code_21 text ENCODE lzo,
other_proc_code_22 text ENCODE lzo,
other_proc_code_23 text ENCODE lzo,
other_proc_code_24 text ENCODE lzo,
other_proc_code_25 text ENCODE lzo,
claim_filing_ind_cd text ENCODE lzo,
prov_referring_state_license text ENCODE lzo,
prov_referring_upin text ENCODE lzo,
prov_referring_commercial_id text ENCODE lzo,
pay_to_prov_address_1 text ENCODE lzo,
pay_to_prov_address_2 text ENCODE lzo,
pay_to_prov_city text ENCODE lzo,
pay_to_prov_zip text ENCODE lzo,
pay_to_prov_state text ENCODE lzo,
supervising_pr_org_name text ENCODE lzo,
supervising_pr_last_name text ENCODE lzo,
supervising_pr_first_name text ENCODE lzo,
supervising_pr_middle_name text ENCODE lzo,
supervising_pr_npi text ENCODE lzo,
supervising_pr_state_lic text ENCODE lzo,
supervising_pr_upin text ENCODE lzo,
supervising_pr_commercial text ENCODE lzo,
supervising_pr_location text ENCODE lzo,
operating_pr_org_name text ENCODE lzo,
operating_pr_last_name text ENCODE lzo,
operating_pr_first_name text ENCODE lzo,
operating_pr_middle_name text ENCODE lzo,
operating_pr_npi text ENCODE lzo,
operating_pr_state_lic text ENCODE lzo,
operating_pr_upin text ENCODE lzo,
operating_pr_commercial text ENCODE lzo,
operating_pr_location text ENCODE lzo,
oth_operating_pr_org_name text ENCODE lzo,
oth_operating_pr_last_name text ENCODE lzo,
oth_operating_pr_first_name text ENCODE lzo,
oth_operating_pr_middle_name text ENCODE lzo,
oth_operating_pr_npi text ENCODE lzo,
oth_operating_pr_state_lic text ENCODE lzo,
oth_operating_pr_upin text ENCODE lzo,
oth_operating_pr_commercial text ENCODE lzo,
oth_operating_pr_location text ENCODE lzo,
pay_to_plan_name text ENCODE lzo,
pay_to_plan_address_1 text ENCODE lzo,
pay_to_plan_address_2 text ENCODE lzo,
pay_to_plan_city text ENCODE lzo,
pay_to_plan_zip text ENCODE lzo,
pay_to_plan_state text ENCODE lzo,
pay_to_plan_naic_id text ENCODE lzo,
pay_to_plan_payer_id text ENCODE lzo,
pay_to_plan_plan_id text ENCODE lzo,
pay_to_plan_clm_ofc_number text ENCODE lzo,
pay_to_plan_tax_id text ENCODE lzo,
cob_payer_name_1 text ENCODE lzo,
cob_payer_id_1 text ENCODE lzo,
cob_payer_hpid_1 text ENCODE lzo,
cob_payer_seq_code_1 text ENCODE lzo,
cob_relationship_cd_1 text ENCODE lzo,
cob_group_policy_nbr_1 text ENCODE lzo,
cob_group_name_1 text ENCODE lzo,
cob_ins_type_code_1 text ENCODE lzo,
cob_payer_claim_filing_ind_code_1 text ENCODE lzo,
cob_payer_name_2 text ENCODE lzo,
cob_payer_id_2 text ENCODE lzo,
cob_payer_hpid_2 text ENCODE lzo,
cob_payer_seq_code_2 text ENCODE lzo,
cob_relationship_cd_2 text ENCODE lzo,
cob_group_policy_nbr_2 text ENCODE lzo,
cob_group_name_2 text ENCODE lzo,
cob_ins_type_code_2 text ENCODE lzo,
cob_payer_claim_filing_ind_code_2 text ENCODE lzo)
DISTKEY(claim_id);

-- Select medical claim data (column2 = 'C') from the transactions table and insert the first 111 columns into the claims table. A claim row only consists of 111 columns
-- Drop column2 (record type), we won't need it anymore
-- Normalize gender in column 25 (patient_gender in claims) to 'M', 'F', or 'U'
-- Normalize numeric columns (column55 => total_charge, column56 => total_allowed)
-- Normalize date columns (column5 => date_received, column92 => inst_date_admitted)
INSERT INTO emdeon_dx_raw_claims SELECT column1,
column3,
column4,
date_received.formatted,
column6,
column7,
column8,
column9,
column10,
column11,
column12,
column13,
column14,
column15,
column16,
column17,
column18,
column19,
column20,
column21,
column22,
column23,
column24,
CASE WHEN UPPER(column25) = 'M' OR column25 = '1' THEN 'M' WHEN UPPER(column25) = 'F' OR column25 = '2' THEN 'F' ELSE 'U' END,
column26,
column27,
column28,
column29,
column30,
column31,
column32,
column33,
column34,
column35,
column36,
column37,
column38,
column39,
column40,
column41,
column42,
column43,
column44,
column45,
column46,
column47,
column48,
column49,
column50,
column51,
column52,
statement_from.formatted,
statement_to.formatted,
CASE WHEN (length(column55)-length(replace(column55,'.',''))) = 1 THEN
('0' || regexp_replace(column55, '[^0-9.]') || '0')::float::text
ELSE ('0' || regexp_replace(column55, '[^0-9]'))::bigint::text END,
CASE WHEN (length(column56)-length(replace(column56,'.',''))) = 1 THEN
('0' || regexp_replace(column56, '[^0-9.]') || '0')::float::text
ELSE ('0' || regexp_replace(column56, '[^0-9]'))::bigint::text END,
column57,
column58,
column59,
column60,
column61,
column62,
column63,
column64,
column65,
column66,
column67,
column68,
column69,
column70,
column71,
column72,
column73,
column74,
column75,
column76,
column77,
column78,
column79,
column80,
column81,
column82,
column83,
column84,
column85,
column86,
column87,
column88,
column89,
column90,
column91,
inst_date_admitted.formatted,
column93,
column94,
column95,
column96,
column97,
column98,
column99,
column100,
column101,
column102,
column103,
column104,
column105,
column106,
column107,
column108,
column109,
column110,
column111
FROM emdeon_dx_raw
    LEFT JOIN dates date_received ON column5 = date_received.date
    LEFT JOIN dates statement_from ON column53 = statement_from.date
    LEFT JOIN dates statement_to ON column54 = statement_to.date
    LEFT JOIN dates inst_date_admitted ON column92 = inst_date_admitted.date
WHERE column2 = 'C';

-- Select medical service data (column2 = 'S') from the transactions table and insert the first 42 columns into the services table. A service row only consists of 42 columns
-- Drop column2 (record type), we won't need it anymore
-- Normalize numeric columns (column13 => line_charge, column14 => line_allowed, column15 => procedure_units)
-- Normalize date columns (column4 => date_service, column5 => date_service_ends)
INSERT INTO emdeon_dx_raw_service SELECT column1,
column3,
date_service.formatted,
date_service_ends.formatted,
column6,
column7,
column8,
column9,
column10,
column11,
column12,
CASE WHEN (length(column13)-length(replace(column13,'.',''))) = 1 THEN
('0' || regexp_replace(column13, '[^0-9.]') || '0')::float::text
ELSE ('0' || regexp_replace(column13, '[^0-9]'))::bigint::text END,
CASE WHEN (length(column14)-length(replace(column14,'.',''))) = 1 THEN
('0' || regexp_replace(column14, '[^0-9.]') || '0')::float::text
ELSE ('0' || regexp_replace(column14, '[^0-9]'))::bigint::text END,
CASE WHEN (length(column15)-length(replace(column15,'.',''))) = 1 THEN
('0' || regexp_replace(column15, '[^0-9.]') || '0')::float::text
ELSE ('0' || regexp_replace(column15, '[^0-9]'))::bigint::text END,
column16,
column17,
column18,
column19,
column20,
column21,
column22,
column23,
column24,
column25,
column26,
column27,
column28,
column29,
column30,
column31,
column32,
column33,
column34,
column35,
column36,
column37,
column38,
column39,
column40,
column41,
column42
FROM emdeon_dx_raw
    LEFT JOIN dates date_service ON column4 = date_service.date
    LEFT JOIN dates date_service_ends ON column5 = date_service_ends.date
WHERE column2 = 'S';
    

-- Select medical diagnosis data (column2 = 'D') from the transactions table and insert the first 99 columns into the diagnoses table. A diagnosis row consists of all 171 columns, but only the first 99 are relevant for us
-- Drop column2 (record type), we won't need it anymore
INSERT INTO emdeon_dx_raw_diagnosis SELECT column1,
column3,
column4,
column5,
column6,
column7,
column8,
column9,
column10,
column11,
column12,
column13,
column14,
column15,
column16,
column17,
column18,
column19,
column20,
column21,
column22,
column23,
column24,
column25,
column26,
column27,
column28,
column29,
column30,
column31,
column32,
column33,
column34,
column35,
column36,
column37,
column38,
column39,
column40,
column41,
column42,
column43,
column44,
column45,
column46,
column47,
column48,
column49,
column50,
column51,
column52,
column53,
column54,
column55,
column56,
column57,
column58,
column59,
column60,
column61,
column62,
column63,
column64,
column65,
column66,
column67,
column68,
column69,
column70,
column71,
column72,
column73,
column74,
column75,
column76,
column77,
column78,
column79,
column80,
column81,
column82,
column83,
column84,
column85,
column86,
column87,
column88,
column89,
column90,
column91,
column92,
column93,
column94,
column95,
column96,
column97,
column98,
column99
FROM emdeon_dx_raw WHERE column2 = 'D';
